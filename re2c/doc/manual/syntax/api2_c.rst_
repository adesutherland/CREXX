There are two API styles that determine the form in which the primitives should
be defined:

  **Free-form**
    Free-form style is enabled with configuration
    ``re2c:api:style = free-form;``.
    In this style interface primitives should be defined as free-form pieces of
    code with interpolated variables of the form ``@@{var}`` or optionally just
    ``@@`` if there is a single variable.
    The set of variables is specific to each primitive.
    Generic API can be defined in terms of pointers ``cursor``, ``limit``,
    ``marker`` and ``ctxmarker`` as follows:

    .. code-block:: c

        /*!re2c
          re2c:define:YYPEEK       = "*cursor";
          re2c:define:YYSKIP       = "++cursor;";
          re2c:define:YYBACKUP     = "marker = cursor;";
          re2c:define:YYRESTORE    = "cursor = marker;";
          re2c:define:YYBACKUPCTX  = "ctxmarker = cursor;";
          re2c:define:YYRESTORECTX = "cursor = ctxmarker;";
          re2c:define:YYRESTORETAG = "cursor = ${tag};";
          re2c:define:YYLESSTHAN   = "limit - cursor < @@{len}";
          re2c:define:YYSTAGP      = "@@{tag} = cursor;";
          re2c:define:YYSTAGN      = "@@{tag} = NULL;";
          re2c:define:YYSHIFT      = "cursor += @@{shift};";
          re2c:define:YYSHIFTSTAG  = "@@{tag} += @@{shift};";
        */

    |

  **Function-like**
    Function-like style is enabled with configuration
    ``re2c:api:style = functions;``. In this style primitives should be defined
    as functions or macros with parentheses, accepting the necessary arguments.
    For historical reasons this API style is the default for C/C++ backend.
    Generic API can be defined in terms of pointers ``cursor``, ``limit``,
    ``marker`` and ``ctxmarker`` as follows:

    .. code-block:: c

        #define  YYPEEK()                 *cursor
        #define  YYSKIP()                 ++cursor
        #define  YYBACKUP()               marker = cursor
        #define  YYRESTORE()              cursor = marker
        #define  YYBACKUPCTX()            ctxmarker = cursor
        #define  YYRESTORECTX()           cursor = ctxmarker
        #define  YYRESTORETAG(tag)        cursor = tag
        #define  YYLESSTHAN(len)          limit - cursor < len
        #define  YYSTAGP(tag)             tag = cursor
        #define  YYSTAGN(tag)             tag = NULL
        #define  YYSHIFT(shift)           cursor += shift
        #define  YYSHIFTSTAG(tag, shift)  tag += shift

