
``--debug-output -d``
    Emit ``YYDEBUG`` invocations in the generated code. This is useful to trace
    lexer execution.

``--dump-adfa``
    Debug option: output DFA after tunneling (in .dot format).

``--dump-cfg``
    Debug option: output control flow graph of tag variables (in .dot format).

``--dump-closure-stats``
    Debug option: output statistics on the number of states in closure.

``--dump-dfa-det``
    Debug option: output DFA immediately after determinization (in .dot format).

``--dump-dfa-min``
    Debug option: output DFA after minimization (in .dot format).

``--dump-dfa-tagopt``
    Debug option: output DFA after tag optimizations (in .dot format).

``--dump-dfa-tree``
    Debug option: output DFA under construction with states represented as tag
    history trees (in .dot format).

``--dump-dfa-raw``
    Debug option: output DFA under construction with expanded state-sets
    (in .dot format).

``--dump-interf``
    Debug option: output interference table produced by liveness analysis of tag
    variables.

``--dump-nfa``
    Debug option: output NFA (in .dot format).

``--emit-dot -D``
    Instead of normal output generate lexer graph in .dot format.
    The output can be converted to an image with the help of Graphviz
    (e.g. something like ``dot -Tpng -odfa.png dfa.dot``).
