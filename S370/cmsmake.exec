/* THIS EXEC BUILDS CREXX */
SOURCE_DISK = 'D'
BINARY_DISK = 'E'

BUILD_RESULT = 0

'GLOBAL TXTLIB GCCRES'

CALL BUILD "D"
IF BUILD_RESULT = 0 THEN CALL BUILD

IF BUILD_RESULT > 0 THEN DO
SAY "***********************************"
SAY "***** THERE WERE BUILD ERRORS *****"
SAY "***** THERE WERE BUILD ERRORS *****"
SAY "***** THERE WERE BUILD ERRORS *****"
SAY "***********************************"
END

EXIT BUILD_RESULT

BUILD: PROCEDURE EXPOSE SOURCE_DISK BINARY_DISK RESULT
  ARG DEBUG

  PARM = "CREXX" || DEBUG /* DEBUG/RELEASE COMPILER OPTIONS */

  /* AVL TREE */
  RESULT = 0
  CALL COMPILE "AVL_TREE"

  /* MACHINE */
  RESULT = 0
  CALL COMPILE "RXVMINST"

  IF BUILD_RESULT > 0 THEN EXIT BUILD_RESULT

  /* ASSEMBLER */
  CALL COMPILE "RXASSCAN"
  CALL COMPILE "RXASGRMR"
  CALL COMPILE "RXASMAIN"
  CALL COMPILE "RXASTOKE"
  CALL COMPILE "RXASEROR"
  CALL COMPILE "RXASASSM"
  IF RESULT = 0 THEN DO
    "LOAD RXASSCAN RXASGRMR RXASMAIN RXASTOKE RXASEROR RXASASSM RXVMINST AVL_TREE"
    IF RC > 0 THEN BUILD_RESULT = RC
    "GENMOD RXC" || DEBUG
    IF RC > 0 THEN BUILD_RESULT = RC
    "COPY RXC" || DEBUG "MODULE A = =" BINARY_DISK
    SAY "RXC" || DEBUG "-V"
    "RXC" || DEBUG "-V"
  END

  /* INTERPRETER - RXVM */
  /* REQUIRES - MACHINE AVL_TREE */
  RESULT = 0
  CALL COMPILE "RXVMMAIN"
  CALL COMPILE "RXVMINTP"
  IF RESULT = 0 THEN DO
    "LOAD RXVMMAIN RXVMINTP RXVMINST AVL_TREE"
    IF RC > 0 THEN BUILD_RESULT = RC
    "GENMOD RXVM" || DEBUG
    IF RC > 0 THEN BUILD_RESULT = RC
    "COPY RXVM" || DEBUG "MODULE A = =" BINARY_DISK
    SAY "RXVM" || DEBUG "-V"
    "RXVM" || DEBUG "-V"
  END

  /* DISASSEMBLER - RXDAS */
  /* REQUIRES - MACHINE AVL_TREE */
  RESULT = 0
  CALL COMPILE "RXDAMAIN"
  CALL COMPILE "RXDADISM"
  IF RESULT = 0 THEN DO
    "LOAD RXDAMAIN RXDADISM RXVMINST AVL_TREE"
    IF RC > 0 THEN BUILD_RESULT = RC
    "GENMOD RXDAS" || DEBUG
    IF RC > 0 THEN BUILD_RESULT = RC
    "COPY RXDAS" || DEBUG "MODULE A = =" BINARY_DISK
    SAY "RXDAS" || DEBUG "-V"
    "RXDAS" || DEBUG "-V"
  END

  /* CLEANUP */
  "ERASE * TEXT" SOURCE_DISK
  "ERASE * MODULE A"
RETURN

COMPILE: PROCEDURE EXPOSE SOURCE_DISK BINARY_DISK RESULT PARM BUILD_RESULT
  ARG FILE
  SAY "COMPILING" FILE
  "EXEC GCC" FILE "C" SOURCE_DISK "(CMS PARM" PARM
  IF RC>0 THEN RESULT = RC
  IF RESULT > 0 THEN BUILD_RESULT = RESULT
RETURN
