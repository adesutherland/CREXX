/*
 * crexx RXPP
 * CREXX Pre Compiler
 */
options levelb
import rxfnsb
##set def 1
##if def
  ##set printgen none          ## show no precompiler calls in generated rexx
  ##set printgen all           ## show all nested precompiler calls in generated rexx
  ##set printgen nnest         ## show only first precompiler call for nested calls (default)
##endif
##ifn def
  ##set printgen none          ## show no precompiler calls in generated rexx
  ##if abc
       say SQUARE(DOUBLE(4))        ## expand nested macro calls coming from the MACLIB library
       say quote({rxpp_date})       ## pre defined pre-compiler variable: compilation date/time
       say dQuote({rxpp_rexx})      ## pre defined pre-compiler variable: main rexx name
  ##endif
##end
/* define a macro containing a {variable}, the define instruction is fetched in pass 1, therefore the value doesn't need to be avaliable */
##define log                   {say time('l')' log record' ; say '{prefix} something'}

##define Liststem(stem)        {do _indx=1 to stem.0; say stem._indx ; end}
/* the set instruction is always setup in pass 2 */
##set prefix 1234
 log()                       ## now in pass 2 expand the log macro
##set prefix 456             ## change the prefix
 log()                       ## and re-expand another log macro
 say {prefix}                ## output the current prefix->compiler variable
##unset prefix

list2stem(fruits, "apple", "banana", "cherry")
say arrayhi(123) hi(fruits)
