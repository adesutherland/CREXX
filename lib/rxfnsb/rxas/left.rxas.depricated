/*
 * rexx LEFT bif in rxas. Uses substr.rxas
 * no error checking
 * left: procedure = .string
 *       arg string = .string, length1 = .int, pad = ' '
 */
          .globals=0
substr()  .expose=rxfnsb.substr

left()    .locals=10 .expose=rxfnsb.left
   .meta "rxfnsb.left"="b" ".string" left() "string = .string, length1 = .int, pad = \' \'" ""
    ieq  r7,a2,0   /* return empty when length = 0 */
    brt  return_empty,r7
    brtpandt havepad,a3,1
    load a3," "
havepad:
    dec  r2
    load r3,4  		    /* there are 4 arguments           */
    swap r4,a1 			/* the string                      */
    load r5,1 			/* second argument, startpos == 1  */
    settp r5,1
    swap r6,a2 			/* third argument, length          */
    settp r6,1
    swap r7,a3 			/* fourth argument, pad            */
    settp r7,1
    call r1,substr(),r3 /* call substr                     */
    swap r4,a1 			/* Swap back - pedantic            */
    swap r6,a2 			/* Swap back - pedantic            */
    swap r7,a3 			/* Swap back - pedantic            */
    ret r1
return_empty:
    ret ""
